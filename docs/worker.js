!function(){let e=0;const t=fetch;if("undefined"!=typeof TransformStream){const c=16253175;let i=performance.now();function o(t){e+=t;const o=performance.now();o-i>1e3&&(postMessage({progress:(100*e/c).toFixed(1)}),i=o)}const l=XMLHttpRequest;XMLHttpRequest=class extends l{set onprogress(e){let t=0;super.onprogress=function(s){o(s.loaded-t),t=s.loaded,e(s)}}},globalThis.fetch=async e=>{const s=await t(e),n=new TransformStream({transform(e,t){o(e.byteLength),t.enqueue(e)}});return new Response(s.body.pipeThrough(n),s)}}let s,n;async function a(){s=await loadPyodide({fullStdLib:!1}),await s.loadPackage("brotli"),await s.loadPackage("fonttools")}function r(){const e=s.FS.readFile("input"),t=new Blob([e],{type:"font/ttf"});return URL.createObjectURL(t)}importScripts("https://cdn.jsdelivr.net/pyodide/v0.25.1/full/pyodide.js"),async function(){try{const[o,n]=await Promise.all([a(),t("main.py").then((e=>e.text()))]);s.runPython(n),console.log("Total loaded bytes: "+e),postMessage("initialized")}catch(e){postMessage({error:e.message})}}(),addEventListener("message",(async e=>{if(e.ports[0])try{const[t,o]=e.data;let a;"open"==t&&(a=await async function(e){const t=await fetch(e),o=await t.arrayBuffer(),n=new Uint8Array(o);s.FS.writeFile("temp",n);const a=s.runPython("loadFont('temp')").toJs({dict_converter:Object.fromEntries});a.preview&&(a.preview=r());return a}(o)),"save"==t&&(a=function(e){s.globals.get("processFont")(e);const t=s.FS.readFile("output"),o=new Blob([t],{type:"font/"+e.options.format});n&&URL.revokeObjectURL(n);return n=URL.createObjectURL(o),n}(o)),"legacy"==t&&(s.globals.get("processLegacy")(),a=r()),e.ports[0].postMessage({success:!0,data:a})}catch(t){e.ports[0].postMessage({success:!1,data:t.message})}}))}();