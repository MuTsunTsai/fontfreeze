(()=>{"use strict";let e,r;var t={},n={};function a(e){var r=n[e];if(void 0!==r)return r.exports;var o=n[e]={exports:{}};return t[e](o,o.exports,a),o.exports}a.rv=()=>"1.3.12",a.ruid="bundler=rspack@1.3.12";let o=0,s=fetch;if("undefined"!=typeof TransformStream){let e=performance.now();globalThis.fetch=async r=>{var t;let n=await s(r),a=new TransformStream({transform(r,t){var n=r.byteLength;o+=n;let a=performance.now();a-e>1e3&&(postMessage({progress:(100*o/0xf800f7).toFixed(1)}),e=a),t.enqueue(r)}});return new Response(null==(t=n.body)?void 0:t.pipeThrough(a),n)}}async function i(r){let t=await fetch(r),n=new Uint8Array(await t.arrayBuffer());e.FS.writeFile("temp",n);let a=e.runPython("loadFont('temp')").toJs({dict_converter:Object.fromEntries});return a.preview&&(a.previewUrl=f()),a}function f(){let r=new Blob([e.FS.readFile("input")],{type:"font/ttf"});return URL.createObjectURL(r)}importScripts("https://cdn.jsdelivr.net/pyodide/v0.25.1/full/pyodide.js"),async function(){try{e=await loadPyodide({fullStdLib:!1}),await e.loadPackage("brotli"),await e.loadPackage("fonttools"),console.log("Total loaded bytes: "+o),e.runPython("l='big5'\r\nk='lineHeight'\r\nj='hmtx'\r\ni='cmap'\r\nh='DELT'\r\ng='version'\r\nf='typo_subfamily'\r\ne='typo_family'\r\nd='subfamily'\r\nc='family'\r\nb='disables'\r\na='features'\r\nZ='Bold Italic'\r\nY='Italic'\r\nX='Bold'\r\nW='Regular'\r\nO=False\r\nH='hhea'\r\nU='options'\r\nN=print\r\nQ='OS/2'\r\nP=len\r\nL='fvar'\r\nK=Exception\r\nG='input'\r\nE=None\r\nC='GSUB'\r\nF=True\r\nD='name'\r\nimport os,math as R\r\nfrom typing import cast\r\nfrom fontTools import version as A\r\nfrom fontTools.ttLib import TTFont as m\r\nfrom fontTools.subset import Subsetter as n,Options as o,parse_unicodes as p\r\nfrom fontTools.varLib.instancer import instantiateVariableFont as q\r\nfrom fontTools.ttLib.tables._c_m_a_p import CmapSubtable as r,cmap_format_4\r\nfrom fontTools.ttLib.tables._f_v_a_r import Axis,NamedInstance,table__f_v_a_r\r\nfrom fontTools.ttLib.tables._g_l_y_f import Glyph,GlyphComponent,table__g_l_y_f\r\nfrom fontTools.ttLib.tables._h_h_e_a import table__h_h_e_a\r\nfrom fontTools.ttLib.tables._n_a_m_e import NameRecord,table__n_a_m_e\r\nfrom fontTools.ttLib.tables._m_o_r_t import table__m_o_r_t\r\nfrom fontTools.ttLib.tables.otTables import featureParamTypes as s,FeatureParamsStylisticSet as t,FeatureParamsCharacterVariants as u\r\nI=F\r\nv={W:0,X:1,Y:2,Z:3}\r\ndef w(A,B):\r\n	E=A[D];F=A[L].axes\r\n	for C in F:\r\n		if C.axisTag==B:return E.getDebugName(C.axisNameID)\r\n	return B\r\nclass J:\r\n	def __init__(A,B,M):\r\n		X=', ';Y=M.get('variations');G=M.get(U);V=B[D];E=V.getBestFamilyName();h=V.getDebugName(5);N=f\"Frozen from {E} {h}.\";Z=cast(bool,G.get('keepVar'))\r\n		if L in B and not Z:i=X.join(f\"{w(B,A)}={C}\"for(A,C)in Y.items());N+=f\" Sets {i}.\";q(B,Y,inplace=F,overlap=F)\r\n		R=M.get(a)\r\n		if P(R)>0:R=X.join(R);N+=f\" Activates {R}.\"\r\n		S=M.get(b)\r\n		if P(S)>0:S=X.join(S);N+=f\" Deactivates {S}.\"\r\n		if not I:N+=' Use fallback mode.'\r\n		A.nameTable=V;j=A.nameTable.names;A.nameTable.names=[];E=G.get(c);C=G.get(d);W=G.get(e);O=G.get(f)\r\n		if not W:W=E\r\n		if not O or O==C:O=C;T=f\"{E} {C}\"\r\n		else:T=f\"{E} {O} {C}\"\r\n		A.setName(E,1);A.setName(C,2);A.setName(T,3);A.setName(T,4);A.setName('Version 1.000',5);A.setName(J.getPostscriptName(E,C),6);A.setName('FontFreeze'+M.get(g),8);A.setName(N,10);A.setName('https://mutsuntsai.github.io/fontfreeze',11);A.setName(W,16);A.setName(O,17);A.setName(T,18)\r\n		for H in j:\r\n			if H.nameID>25:A.nameTable.setName(H.string,H.nameID,H.platformID,H.platEncID,H.langID)\r\n		try:B['head'].macStyle=v[C];B[Q].fsSelection=J.makeSelection(B[Q].fsSelection,C)\r\n		except K:pass\r\n		if not Z:J.dropVariationTables(B)\r\n		if G.get('fixContour'):J.setOverlapFlags(B)\r\n	def getPostscriptName(A,B):A=A.replace(' ','');B=B.replace(' ','');C=f\"{A}-{B}\";return C[:63]\r\n	def setName(A,B,C):A.nameTable.setName(B,C,3,1,1033)\r\n	def dropVariationTables(A):\r\n		for B in'STAT cvar fvar gvar'.split():\r\n			if B in A.keys():del A[B]\r\n	def setOverlapFlags(C):\r\n		B=C['glyf']\r\n		for D in B.keys():\r\n			A=B[D]\r\n			if A.isComposite():E=A.components;E[0].flags|=1024\r\n			elif A.numberOfContours>0:A.flags[0]|=64\r\n	def makeSelection(A,B):\r\n		A=A^A\r\n		if B==W:A|=64\r\n		else:A&=~64\r\n		if B==X or B==Z:A|=32\r\n		else:A&=~32\r\n		if B==Y:A|=1\r\n		else:A&=~1\r\n		if not A:A=64\r\n		return A\r\ndef x(A,B):\r\n	if P(B)==0 or C not in A:return\r\n	E=A[C].table.FeatureList.FeatureRecord\r\n	for D in E:\r\n		if D.FeatureTag in B:S(D)\r\ndef S(A):\r\n	A.Feature.LookupListIndex.clear();A.Feature.LookupCount=0\r\n	if I:A.FeatureTag=h\r\nclass T:\r\n	def __init__(A,F,D):\r\n		A.font=F;A.features=D.get(a);E=D.get(U);A.target=E.get('target');A.singleSub=E.get('singleSub')\r\n		if P(A.features)==0 or C not in A.font:return\r\n		A.cmapTables=A.font[i].tables;A.unicodeGlyphs={B for A in A.cmapTables for B in A.cmap.values()};B=A.font[C].table;A.featureRecords=B.FeatureList.FeatureRecord;A.lookup=B.LookupList.Lookup;G=B.ScriptList.ScriptRecord\r\n		for H in G:A.activateInScript(H.Script)\r\n	def activateInScript(B,A):\r\n		if A.DefaultLangSys is not E:B.activateInLangSys(A.DefaultLangSys)\r\n		for C in A.LangSysRecord:B.activateInLangSys(C.LangSys)\r\n	def activateInLangSys(B,F):\r\n		C=E\r\n		for D in F.FeatureIndex:\r\n			A=B.featureRecords[D]\r\n			if A.FeatureTag==B.target:C=A\r\n		for D in F.FeatureIndex:\r\n			A=B.featureRecords[D]\r\n			if A.FeatureTag in B.features:\r\n				if B.singleSub:B.findSingleSubstitution(A)\r\n				if C is E:C=A;s[B.target]=t if A.FeatureTag.startswith('ss')else u;A.FeatureTag=B.target\r\n				else:T.moveFeatureLookups(A.Feature,C.Feature);S(A)\r\n		if C is not E:C.Feature.LookupListIndex.sort()\r\n	def findSingleSubstitution(A,D):\r\n		for E in D.Feature.LookupListIndex:\r\n			B=A.lookup[E]\r\n			if B.LookupType==1:\r\n				for F in B.SubTable:\r\n					for(C,G)in F.mapping.items():\r\n						if C in A.unicodeGlyphs:A.singleSubstitution(C,G)\r\n	def singleSubstitution(C,D,E):\r\n		for A in C.cmapTables:\r\n			for B in A.cmap:\r\n				if A.cmap[B]==D:A.cmap[B]=E\r\n	def moveFeatureLookups(A,B):B.LookupListIndex.extend(A.LookupListIndex);B.LookupCount+=A.LookupCount\r\ndef y(D,B):\r\n	A='*'\r\n	if B=='':return\r\n	C=n(o(layout_scripts=[A],layout_features=[A],name_IDs=[A],name_languages=[A]));C.populate(unicodes=p(B));C.subset(D)\r\ndef A4(font,from_width,to_width):\r\n	C=from_width;B=to_width;A=font;D=A[j];G=A.getBestCmap();I=(B-C)/2\r\n	for(L,E)in G.items():\r\n		J,K=D[E]\r\n		if J==C:D[E]=B,K+I\r\n	F=A[H];F.advanceWidthMax=max(B,F.advanceWidthMax)\r\ndef z(font,delta):\r\n	D=delta;B=font;E=B[j];G=B.getBestCmap();C=0\r\n	for(K,F)in G.items():\r\n		A,I=E[F];A+=D;E[F]=A,I+D/2\r\n		if A>C:C=A\r\n	J=B[H];J.advanceWidthMax=C\r\ndef A0(font,delta):B=font[Q];C=B.usWinAscent;A=B.usWinDescent;E=C+A;F=E+delta;C=R.ceil(C*F/E);A=R.floor(A*F/E);D=font[H];D.ascent=D.ascender=B.usWinAscent=C;B.usWinDescent=A;D.descent=D.descender=-A\r\ndef A1(font):\r\n	A=font\r\n	if not L in A:return\r\n	B=A[D];C=A[L];E=C.axes;F=C.instances;return{'axes':[{'tag':A.axisTag,'default':A.defaultValue,'min':A.minValue,'max':A.maxValue,D:B.getDebugName(A.axisNameID)}for A in E],'instances':[{D:B.getDebugName(A.subfamilyNameID),'coordinates':A.coordinates}for A in F]}\r\ndef loadFont(J):\r\n	B=M(J);H=B[Q];A=B[D];I=B[C].table.FeatureList.FeatureRecord if C in B else[];I=[A.FeatureTag for A in I]\r\n	if os.path.exists(G):os.remove(G)\r\n	os.rename(J,G);K={c:A.getBestFamilyName(),d:A.getDebugName(2),'copyright':A.getDebugName(0),'id':A.getDebugName(3),g:A.getDebugName(5),'trademark':A.getDebugName(7),'manufacturer':A.getDebugName(8),'designer':A.getDebugName(9),'description':A.getDebugName(10),'vendorURL':A.getDebugName(11),'designerURL':A.getDebugName(12),'license':A.getDebugName(13),'licenseURL':A.getDebugName(14),e:A.getDebugName(16),f:A.getDebugName(17),L:A1(B),'gsub':list(dict.fromkeys(I)),'fontHeight':H.sTypoAscender-H.sTypoDescender,k:H.usWinAscent+H.usWinDescent}\r\n	if B.getBestCmap()is E and A2(B):N('Legacy CJK font detected.');V(B);K['preview']=F\r\n	return K\r\ndef A2(E):\r\n	D=E[i]\r\n	for B in D.tables:\r\n		if B.platformID==3 and B.platEncID==4:\r\n			A=r.newSubtable(4);A.platformID=3;A.platEncID=1;A.language=0;A.cmap={}\r\n			for C in B.cmap:\r\n				try:G=ord(C.to_bytes(2,byteorder='big').decode(l))if C>255 else C;A.cmap[G]=B.cmap[C]\r\n				except K:pass\r\n			D.tables=[A];return F\r\n	return O\r\ndef A3(B):\r\n	A=B.string.decode('utf_16_be');A=bytes(A,encoding='raw_unicode_escape')\r\n	try:A.decode(l);B.string=A\r\n	except K:pass\r\ndef M(C):\r\n	B=m(file=C,recalcBBoxes=O,fontNumber=0);E=B[D].names\r\n	for A in E:\r\n		if A.platformID==3 and A.platEncID==4:\r\n			try:A.toStr()\r\n			except K:A3(A)\r\n	return B\r\ndef V(A):\r\n	B='mort'\r\n	if B in A:\r\n		try:C=A[B];C.ensureDecompiled()\r\n		except K:N('Drop corrupted mort table.');del A[B]\r\n	A.save(G,reorderTables=E)\r\ndef processLegacy():A=M(G);V(A)\r\ndef processFont(A):main(A.to_py(),G,'output')\r\ndef main(C,D,E):\r\n	global I;I=F;A=B(C,D)\r\n	try:A.save(E)\r\n	except AssertionError as G:\r\n		if h in str(G):I=O;A=B(C,D);A.save(E)\r\n		else:raise\r\ndef B(args,filename):\r\n	F='woff2';B=args;A=M(filename);J(A,B);x(A,B.get(b));T(A,B);y(A,B.get('unicodes'));C=B.get(U);D=C.get('spacing')\r\n	if D!=0:z(A,D)\r\n	E=C.get(k)\r\n	if E!=0:A0(A,E)\r\n	if C.get('format')==F:A.flavor=F\r\n	return A\r\nN(f\"FontTools version: {A}\")"),postMessage("initialized")}catch(e){e instanceof Error&&postMessage({error:e.message})}}(),addEventListener("message",async t=>{if(t.ports[0])try{let n,[a,o]=t.data;"open"==a&&(n=await i(o)),"save"==a&&(n=function(t){e.globals.get("processFont")(t);let n=new Blob([e.FS.readFile("output")],{type:"font/"+t.options.format});return r&&URL.revokeObjectURL(r),r=URL.createObjectURL(n)}(o)),"legacy"==a&&(e.globals.get("processLegacy")(),n=f()),t.ports[0].postMessage({success:!0,data:n})}catch(e){e instanceof Error&&t.ports[0].postMessage({success:!1,data:e.message})}})})();